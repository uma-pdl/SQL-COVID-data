SELECT location,date, total_cases, new_cases,population, total_deaths
 FROM `rising-oven-337322.Covid_Data.Covid_Deaths` 
 ORDER BY 1,2;

--Looking at total cases vs total deaths in US
--DeathPercent shows likelihood of dying if a person contracts covid.
 SELECT location,date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercent
 FROM `rising-oven-337322.Covid_Data.Covid_Deaths` 
 WHERE location = 'United States'
 ORDER BY 1,2;

 --Total cases vs population (% of population that got covid)
 SELECT location,date, total_cases, population, (total_cases/population)*100 as CasePercent
 FROM `rising-oven-337322.Covid_Data.Covid_Deaths` 
 WHERE location = 'United States'
 ORDER BY 1,2;

 --Countries with highest covid rates wrt population
 SELECT location, population, MAX(total_cases)as HighestInfection,MAX(total_cases/population)*100 as CasePercent
 FROM `rising-oven-337322.Covid_Data.Covid_Deaths` 
 GROUP BY location, population
 order by CasePercent DESC;

 --Countries with highest death count wrt population
 SELECT location, MAX(total_deaths)as DeathCount
 FROM `rising-oven-337322.Covid_Data.Covid_Deaths` 
 WHERE continent is not null 
 GROUP BY location
 order by DeathCount DESC;

--Lets see for each continent
SELECT continent, MAX(total_deaths) as DeathCount
 FROM `rising-oven-337322.Covid_Data.Covid_Deaths` 
 WHERE continent is not null 
 GROUP BY continent
 order by DeathCount DESC;
 
 --Lets see total deaths vs total cases for each day
 SELECT date, SUM(new_cases) as Total_Cases, SUM(new_deaths) as Total_Deaths, 
    SUM(new_deaths)/SUM(new_cases)*100 as DeathPercent
FROM `rising-oven-337322.Covid_Data.Covid_Deaths` 
WHERE continent is not null
GROUP BY date
ORDER BY 1,2;

--Total population vs vaccination
SELECT D.continent, D.location,D.date, D.population,
    V.new_vaccinations, SUM(V.new_vaccinations) OVER (PARTITION BY D.location ORDER BY D.location, D.date)
    as RollingPeopleVaccinated 
 FROM `rising-oven-337322.Covid_Data.Covid_Deaths` D
JOIN `rising-oven-337322.Covid_Data.Covid_Vaccinations` V
ON D.location = V.location
and D.date = V.date
WHERE D.continent is not null
order by 2,3*/

--USE CTE
WITH PopvsVac(Continent, Location, Date, Population,new_vaccinations, RollingPeopleVaccinated)
as (
    SELECT D.continent, D.location,D.date, D.population,
    V.new_vaccinations, SUM(V.new_vaccinations) OVER (PARTITION BY D.location ORDER BY D.location, D.date)
    as RollingPeopleVaccinated 
 FROM `rising-oven-337322.Covid_Data.Covid_Deaths` D
SELECT D.continent, D.location,D.date, D.population,
    V.new_vaccinations, SUM(V.new_vaccinations) OVER (PARTITION BY D.location ORDER BY D.location, D.date)
    as RollingPeopleVaccinated 
 FROM `rising-oven-337322.Covid_Data.Covid_Deaths` D
JOIN `rising-oven-337322.Covid_Data.Covid_Vaccinations` V
ON D.location = V.location
and D.date = V.date
WHERE D.continent is not null
)
SELECT *
FROM PopvsVac*/

--TEMP TABLE
DROP TABLE IF EXISTS #PopulationVaccinatedPercent
CREATE TABLE #PopulationVaccinatedPercent
    (Continent varchar(255),
    Location varchar(255),
    Date Datetime,
    Population numeric,
    New_vaccinations numeric,
    RollingPeopleVaccinated numeric

)

INSERT INTO #PopulationVaccinatedPercent
SELECT D.continent, D.location,D.date, D.population,
    V.new_vaccinations, SUM(V.new_vaccinations) OVER (PARTITION BY D.location ORDER BY D.location, D.date)
    as RollingPeopleVaccinated 
 FROM `rising-oven-337322.Covid_Data.Covid_Deaths` D
JOIN `rising-oven-337322.Covid_Data.Covid_Vaccinations` V
ON D.location = V.location
and D.date = V.date
--WHERE D.continent is not null
--order by 2,3

SELECT *, (RollingPeopleVaccinated/Population)*100
FROM #PopulationVaccinatedPercent
